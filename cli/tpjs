# Copyright (C) 2014 Yahoo! Inc. All Rights Reserved.

# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 1. Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#    This product includes software developed by the Yahoo! Inc..
# 4. Neither the name of the Yahoo! Inc. nor the
#    names of its contributors may be used to endorse or promote products
#    derived from this software without specific prior written permission.

# THIS SOFTWARE IS PROVIDED BY YAHOO! INC. ''AS IS'' AND ANY
# EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL YAHOO! INC. BE LIABLE FOR ANY
# DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
# SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

# Author: Nera Liu <neraliu@yahoo-inc.com>

#!/bin/bash

URL=""
COOKIE_FILE=""
TIMEOUT=""
RENDERING_PATH=""
FUZZ=""
SCRIPT=""
VERBOSE=""

usage() { 
	echo "-------------------"
	echo "USAGE: $0 <target url to scan>"
	echo "	-c 	set the cookie file (in mozilla format)"
	echo "	-t 	set the execution time of the javascript before time out (in msec)"
	echo "	-p 	set the screenshot rendering path"
	echo "	-z 	fuzz the sources (0 for disable or 1 for enable)"
	echo "	-s 	set the scanning script file"
	echo "	-d 	enable the level of message [default|info|debug|json]"
	echo "-------------------"
	echo ""
}

# TPJS_HOME must be set, otherwise use the default location
if [ -z "${TPJS_HOME}" ]; then
	TPJS_HOME=/usr/local/
fi
re='[\/]$'
if ! [[ $TPJS_HOME =~ $re ]] ; then
	TPJS_HOME=${TPJS_HOME}/
fi
if [ ! -f "${TPJS_HOME}bin/phantomjs" ]; then
	usage
        echo "[ERROR] ${TPJS_HOME}bin/phantomjs not found, please set the environmental variable TPJS_HOME"
        echo "-------------------"
	exit 1;
fi

# URL must be set
if [ "$#" == "0" ]; then
	usage
        echo "[ERROR] target url is required!"
        echo "-------------------"
	exit 1;
else
	URL=$1
	shift
fi
if [ -z "${URL}" ]; then
	usage
	echo "[ERROR] target url is required!"
	echo "-------------------"
	exit 1;
fi

while getopts ":c:t:p:z:s:d:" o; do
	case "${o}" in
		c)
			COOKIE_FILE=${OPTARG}
			if ! [[ -f $COOKIE_FILE ]] ; then
				usage
				echo "[ERROR] '$COOKIE_FILE' not existed!"
				echo "-------------------"
				exit 1;
			fi
			;;
		t)
			TIMEOUT=${OPTARG}
			re='^[0-9]+$'
			if ! [[ $TIMEOUT =~ $re ]] ; then
				usage
				echo "[ERROR] '$TIMEOUT' is not a integer!"
				echo "-------------------"
				exit 1;
			fi
			;;
		p)
			RENDERING_PATH=${OPTARG}
			if ! [[ -d $RENDERING_PATH ]] ; then
				usage
				echo "[ERROR] '$RENDERING_PATH' is not a path!"
				echo "-------------------"
				exit 1;
			fi
			;;
		z)
			FUZZ=${OPTARG}
			re='[0-1]'
			if ! [[ $FUZZ =~ $re ]] ; then
				usage
				echo "[ERROR] FUZZ must be 0 or 1"
				echo "-------------------"
				exit 1;
			fi
			;;
		s)
			SCRIPT=${OPTARG}
			if ! [[ -f $SCRIPT ]] ; then
				usage
				echo "[ERROR] '$SCRIPT' not existed!"
				echo "-------------------"
				exit 1;
			fi
			;;
		d)
			VERBOSE=${OPTARG}
			if ! [[ $VERBOSE == "default" || $VERBOSE == "info" || $VERBOSE == "debug" || $VERBOSE == "json" ]] ; then
				usage
				echo "[ERROR] VERBOSE must be default, info, debug or json"
				echo "-------------------"
				exit 1;
			fi
			;;
		*)
			usage
			exit 1;
			;;
	esac
done
shift $((OPTIND-1))

if [ -z "${COOKIE_FILE}" ]; then
	COOKIE_FILE="cookie.txt"
fi
if [ -z "${TIMEOUT}" ]; then
	TIMEOUT=1000
fi
if [ -z "${RENDERING_PATH}" ]; then
	RENDERING_PATH="./"
fi
if [ -z "${FUZZ}" ]; then
	FUZZ=0
fi
if [ -z "${SCRIPT}" ]; then
	SCRIPT="${TPJS_HOME}share/phantomjs/domxss.js"
fi
if [ -z "${VERBOSE}" ]; then
	VERBOSE="default"
fi

${TPJS_HOME}bin/phantomjs $SCRIPT "${URL}" $COOKIE_FILE $TIMEOUT $FUZZ $RENDERING_PATH $VERBOSE
